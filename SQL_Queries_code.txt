+++++++++++++++++
+++++ RULES +++++
+++++++++++++++++

* Saber condição 1
	_nome_sensor
	SELECT name_sensor_condition1 FROM rules WHERE id = 
	_comparador
	SELECT operator_condition1 FROM rules WHERE id = 
	_valor da comparação
	SELECT threshold_condition1 FROM rules WHERE id = 

* Saber condição lógica entre a condição 1 e a condição 2
	_caso retorne NULL signfica que não existe condição 2
	SELECT logic_operator FROM rules WHERE id = 

* Saber condição 2	_nome_sensor
	SELECT name_sensor_condition2 FROM rules WHERE id = 
	_comparador
	SELECT operator_condition2 FROM rules WHERE id = 
	_valor da comparação
	SELECT threshold_condition2 FROM rules WHERE id = 

* Saber sampling period
	SELECT sampling_period FROM rules WHERE id = 

* Saber schedule
	SELECT schedule FROM rules WHERE id = 

* Saber tempo e data
	SELECT time, day FROM rules WHERE id = 

* Saber a que divisão pertence
	SELECT divisions.id,name FROM divisions,rules WHERE divisions.id=rules.id_divisions AND rules.id=

* Saber o número de estados futuros dos atuadores referentes à regra
	SELECT COUNT(*) FROM actuator_future_state WHERE id_rules = 

* Inserir a descrição das rules
	INSERT INTO rules(id, name_sensor_condition1, operator_condition1, threshold_condition1, name_sensor_condition2, operator_condition2, threshold_condition2, sampling_period, schedule	time, id_divisions, day, num_actuators_future_state, logic_operator) VALUES (, , , , , , , , , , , , , )

* Alterar cada atributo (vão ser necessárias 13 queries)
	UPDATE rules SET id = xxx WHERE id = 
	UPDATE rules SET name_sensor_condition1 = xxx WHERE id = 
	UPDATE rules SET operator_condition1 = xxx WHERE id = 
	UPDATE rules SET threshold_condition1 = xxx WHERE id = 
	UPDATE rules SET name_sensor_condition2 = xxx WHERE id = 
	UPDATE rules SET operator_condition2 = xxx WHERE id = 
	UPDATE rules SET threshold_condition2 = xxx WHERE id = 
	UPDATE rules SET sampling_period = xxx WHERE id = 
	UPDATE rules SET schedule = xxx WHERE id = 
	UPDATE rules SET time = xxx WHERE id = 
	UPDATE rules SET id_divisions = xxx WHERE id = 
	UPDATE rules SET day = xxx WHERE id = 
	UPDATE rules SET num_actuators_future_state = xxx WHERE id = 
	UPDATE rules SET logic_operator = xxx WHERE id = 

* Eliminar uma Rule
	DELETE FROM rules WHERE id = 

+++++++++++++++++
+++++ USERS +++++
+++++++++++++++++

* Saber o nome do utilizador
	SELECT name FROM users WHERE id = 

* Saber a permissão do utilizador (Administrador ou utilizador normal)
	SELECT permission FROM users WHERE id = 

* Saber a password do utilizador
	SELECT password FROM users WHERE id = 

* Saber o estado de atividade (se está ativo ou inativo)
	SELECT state FROM users WHERE id = 
	_se estiver a 1 está ativo
	_se estiver a 0 está inativo

* Saber a que apartamentos tem acesso
	SELECT floor,number FROM apartment,users WHERE users.name='...' AND state=1 AND apartment.id=users.id_apartment 

* Saber a atividade associada a cada utilizador
	SELECT activity_description FROM users_activity,users WHERE users_activity.id_users=users.id AND users.name='...'

* Inserir a descrição dos users
	INSERT INTO users(id, name, permission, password, state, id_apartment) VALUES (5, 'username', 'normal', '*****', 0, 0)

* Alterar nome do utilizador
	UPDATE users SET name = 'new_username' WHERE id = 

* Alterar permissÃ£o do utilizador
	UPDATE users SET permission = 'new_permission' WHERE id = 

* Alterar password do utilizador
	UPDATE users SET password = 'new_password' WHERE id = 

* Alterar estado do utilizador
	UPDATE users SET state = 'new_state' WHERE id = 

* Eliminar um utilizador
	DELETE FROM users WHERE id = 

* Alterar apartamento do utilizador
	UPDATE users SET id_apartment = new_id WHERE id = 


+++++++++++++++++++++++++++++++++
+++++ ACTUATOR_FUTURE_STATE +++++
+++++++++++++++++++++++++++++++++

* Saber o estado futuro do atuador
	SELECT future_state FROM actuator_future_state WHERE id_actuator = 0 AND id_rules = 0

* Saber o atuador associado ao estado futuro 
	SELECT name,actuator_state,future_state FROM actuator,actuator_future_state WHERE actuator.id=actuator_future_state.id_actuator AND actuator_future_state.id_actuator=

* Inserir a descrição dos actuator_future_state
	INSERT INTO actuator_future_state(id, future_state, id_actuator, id_rules) VALUES (18, 'OFF', 2, 0)

* Alterar cada atributo (vão ser 4 queries)
	UPDATE actuator_future_state SET future_state = xxx WHERE id = xxx
	UPDATE actuator_future_state SET id_actuator = xxx WHERE id = xxx
	UPDATE actuator_future_state SET id_rules = xxx WHERE id = xxx

* Eliminar um Actuator_future_state
	DELETE FROM actuator_future_state WHERE id = 

++++++++++++++++++
++++ BUILDING ++++
++++++++++++++++++

* Pesquisar o endereço do building;
	- SELECT * FROM building WHERE address= 

* Pesquisar o numero de apartamentos;
	- SELECT num_apartments FROM building WHERE address=

* Pesquisar o número de pisos;
	- SELECT num_floors FROM building WHERE address=

* Saber o dono;
	- SELECT owner FROM building WHERE address=

* Eliminar um building;
	- DELETE FROM building where address=

* Saber os apartamentos associados a um edifício;
	- SELECT floor,number,proprietary FROM apartment,building WHERE apartment.address_building=building.address AND building.address=

* Inserir a descrição do edifício;
	- INSERT INTO building (address, num_floors, owner, num_apartments) VALUES ('TBD', 2, 'FSDFDFS', 3)

* Alterar o endereço do building;
	- UPDATE building SET address='wsdwdwd' WHERE address='ocsscsn'

* Alterar o número de apartamentos;
	- UPDATE building SET num_apartments=4 WHERE address='sfsfs'

* Alterar número de pisos;
	- UPDATE building SET num_floors=2 WHERE address='sfsfs'

* Alterar o dono do edifício;
	- UPDATE building SET owner='wkdkjdwk' WHERE address='sfsfs'

+++++++++++++++++++
++++ APARTMENT ++++
+++++++++++++++++++

* Pesquisar o número da porta;
	- SELECT number FROM apartment WHERE id=

* Pesquisar o andar;
	- SELECT floor FROM apartment WHERE id=

* Pesquisar o número de divisões;
	- SELECT num_divisions FROM apartment WHERE id=

* Saber o proprietário;
	- SELECT proprietary FROM apartment WHERE id=

* Saber os utilizadores associados ao apartamento;
	- SELECT name FROM users,apartment WHERE users.id_apartment=apartment.id AND apartment.id=

* Saber as divisões associados a certo apartamento;
	- SELECT name FROM divisions,apartment WHERE divisions.id_apartment=apartment.id AND apartment.id=

* Saber os administradores associados ao apartamento;
	- SELECT name FROM users,apartment WHERE users.permission='admin' AND users.state=1 AND users.id_apartment=apartment.id AND apartment.id=

* Inserir a descrição do apartamento;
	- INSERT INTO apartment (id,floor,number,proprietary,num_divisions,adress_building) VALUES (1,0,2,'DQS',5,'blabla')

* Alterar cada atributo (vão ser necessários 6 queries);
	- UPDATE apartment SET id=1 WHERE id=0
	- UPDATE apartment SET floor=0 WHERE floor=1
	- UPDATE apartment SET number=2 WHERE number=1
	- UPDATE apartment SET proprietary='Daniel' WHERE proprietary='ASA'
	- UPDATE apartment SET num_divisions=4 WHERE num_divisions=5
	- UPDATE apartment SET adress_building='Rua do Tenta' WHERE adress_building='Bem tentaram'

* Eliminar um Apartment.
	- DELETE FROM apartment WHERE id=
	
+++++++++++++++++++
++++ DIVISIONS ++++
+++++++++++++++++++

* Pesquisar o número de divisões;
	- SELECT num_divisions FROM apartment, divisions WHERE apartment.id = divisions.id_apartment AND divisions.id=

* Pesquisar a divisão;
	- SELECT name FROM apartment, divisions WHERE apartment.id = divisions.id_apartment AND divisions.id=

* Saber o número de regras;
	- SELECT num_rules FROM divisions WHERE id=

* Saber o número de atuadores;
	- SELECT num_actuators FROM divisions WHERE id=

* Saber o número de sensores;
	- SELECT num_sensors FROM divisions WHERE id=

* Saber as regras associadas a certa divisão;
	-SELECT name_sensor_condition1,operator_condition1,threshold_condition1,name_sensor_condition2,operator_condition2,threshold_condition2 FROM rules,divisions WHERE rules.id_divisions = divisions.id AND divisions.id=

* Saber os sensores associados a certa divisão;
	- SELECT mote_id,sensor_type,data FROM sensor,divisions WHERE sensor.id_divisions = divisions.id AND divisions.id=

* Saber os atuadores associados a certa divisão;
	- SELECT actuator.name,actuator_state FROM actuator,divisions WHERE actuator.id_divisions = divisions.id AND divisions.id=

* Saber a que apartamento pertence;
	- SELECT floor,number FROM apartment, divisions WHERE divisions.id_apartment = apartment.id AND divisions.id=

* Inserir a descrição das divisões;
	- INSERT INTO divisions (id,name,num_sensors,num_actuators,id_apartment,num_rules) VALUES (1,'ROOM3',2,3,0,2)

* Alterar cada atributo (vão ser necessárias 6 queries);
	- UPDATE divisions SET id=1 WHERE id=0
	- UPDATE divisions SET name='ROOM3' WHERE name='ROOM2'
	- UPDATE divisions SET num_sensors=2 WHERE num_sensors=1
	- UPDATE divisions SET num_actuators=3 WHERE num_actuators=2
	- UPDATE divisions SET id_apartment=4 WHERE id_apartment=5
	- UPDATE divisions SET num_rules=2 WHERE num_rules=3

* Eliminar uma Division.
	- DELETE FROM divisions WHERE id=

++++++++++++++++
++++ SENSOR ++++
++++++++++++++++

* Saber o mote;
	- SELECT mote_id FROM sensor WHERE id=
	
* Saber o tipo de sensor;
	- SELECT sensor_type FROM sensor WHERE id=
	
* Saber dia e hora;
	- SELECT day, time FROM sensor WHERE id=
	
* Saber a que divisão pertence;
	- SELECT name FROM divisions,sensor WHERE divisions.id = sensor.id_divisions AND sensor.id=

* Saber os dados do sensor;
	- SELECT data FROM sensor WHERE id=

* Inserir a descrição dos sensors;
	- INSERT INTO sensor (id,mote_id,sensor_type,data,time,id_divisions,day) values (1,2,'HUM',30.5,TIME,2,DATE)

* Alterar cada atributo (vão ser 7 queries);
	- UPDATE sensor SET id=1 WHERE id=0
	- UPDATE sensor SET mote_id=1 WHERE name=2
	- UPDATE sensor SET sensor_type='LIGHT' WHERE sensor_type='HUM'
	- UPDATE sensor SET data=40.5 WHERE data=30.6
	- UPDATE sensor SET id_divisions=2 WHERE id_divisions=1
	- UPDATE sensor SET time=???
	- UPDATE sensor SET day=???

* Eliminar um Sensor.

	- DELETE FROM sensor WHERE id=

++++++++++++++++++
++++ ACTUATOR ++++
++++++++++++++++++

* Saber o nome do atuador;
	- SELECT name FROM actuator WHERE id=

* Saber o estado do atuador;
	- SELECT actuator_state FROM actuator WHERE id=

* Saber dia e hora;
	- SELECT day, time FROM actuator WHERE id=

* Saber a que divisão pertence;
	- SELECT divisions.name FROM divisions,actuator WHERE divisions.id = actuator.id_divisions AND actuator.id=

* Inserir a descrição dos actuators;
	- INSERT INTO actuator (id,name,actuator_state,time,id_divisions,day) values (1,'HEATER','ON',TIME,2,DATE)

* Alterar cada atributo (vão ser 6 queries);
	- UPDATE actuator SET id=1 WHERE id=0
	- UPDATE actuator SET name='HEATER' WHERE name='BLINDS'
	- UPDATE actuator SET actuator_state='ON' WHERE actuator_state='OFF'
	- UPDATE actuator SET id_divisions=2 WHERE id_divisions=1
	- UPDATE actuator SET time=???
	- UPDATE actuator SET day=???

* Eliminar um Actuator.
	- DELETE FROM actuator WHERE id=
	
++++++++++++++++++++++++
++++ USERS_ACTIVITY ++++
++++++++++++++++++++++++

* Saber o nome do utilizador;
	- SELECT name FROM users, users_activity WHERE users.id=users_activity.id_users AND id=

* Saber o histórico de atividade;
	- SELECT activity_description FROM users_activity WHERE id=

* Saber tempo e data;
	- SELECT day,time FROM users_activity WHERE id=

* Inserir a descrição dos users_activity;
	- INSERT INTO (id,id_users,activity_description,time,day) values (1,2,'blablablabla',TIME,DATE)

* Eliminar um users_activity.
	- DELETE FROM users_activity WHERE id=
